# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
commands:
  print_pipeline_id:
    description: "Print Pipeline ID"
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:

  save-hello-world-output:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "Hello World in Output File"
          command: echo "text to output here" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths: 
            - output.txt
  

  rollback-test:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "Make it Fail"
          command: return 1
      
      - run:
          name: "Rolling Back"
          command: echo I failed
          when: on_fail

  
  command-test:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id


  print-hello-world-output:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Hello World Printed form Output File"
          command: cat ~/output.txt


  print-name:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      -  run:
          name: "My_Name"
          command: "echo $My_Name "


  print-hello:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      -  run:
          name: "Hello"
          command: "echo Hello"
  
  print-world:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      -  run:
          name: "World"
          command: "echo World"
  
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  
  say-my-name:
    jobs:
      - print-name
  
  say-hello-workflow:
    jobs:
      - say-hello
  print-helloworld:
    jobs:
      - print-hello
      - print-world:
          requires:
            - print-hello
  OutputFile:
    jobs:
      - save-hello-world-output
      - print-hello-world-output:
          requires:
            - save-hello-world-output
  Command-Workflow:
    jobs:
      - command-test
  Rollback-Workflow:
    jobs:
      - rollback-test
